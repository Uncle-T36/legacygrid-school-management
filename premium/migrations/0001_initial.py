# Generated by Django 5.2.6 on 2025-09-17 17:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=False)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='daily', max_length=20)),
                ('retention_days', models.IntegerField(default=30)),
                ('encryption_key', models.CharField(blank=True, max_length=255)),
                ('last_backup', models.DateTimeField(blank=True, null=True)),
                ('next_backup', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='backup_config', to='schools.school')),
            ],
            options={
                'verbose_name': 'Backup Configuration',
                'verbose_name_plural': 'Backup Configurations',
            },
        ),
        migrations.CreateModel(
            name='BackupLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('error_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backup_logs', to='schools.school')),
            ],
            options={
                'verbose_name': 'Backup Log',
                'verbose_name_plural': 'Backup Logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=255, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('ssl_enabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('dns_records', models.JSONField(blank=True, default=dict)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_domain', to='schools.school')),
            ],
            options={
                'verbose_name': 'Custom Domain',
                'verbose_name_plural': 'Custom Domains',
            },
        ),
        migrations.CreateModel(
            name='FeedbackReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('bug', 'Bug Report'), ('feature', 'Feature Request'), ('feedback', 'General Feedback'), ('security', 'Security Issue')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_reports', to='schools.school')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Feedback Report',
                'verbose_name_plural': 'Feedback Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PremiumSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('free', 'Free'), ('basic', 'Basic'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], default='free', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=255)),
                ('auto_renew', models.BooleanField(default=True)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='schools.school')),
            ],
            options={
                'verbose_name': 'Premium Subscription',
                'verbose_name_plural': 'Premium Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='SecurityReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(choices=[('password_policy', 'Password Policy Review'), ('access_audit', 'Access Rights Audit'), ('security_scan', 'Security Scan'), ('backup_test', 'Backup Recovery Test'), ('penetration_test', 'Penetration Test')], max_length=50)),
                ('due_date', models.DateTimeField()),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('findings', models.JSONField(blank=True, default=list)),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_reviews', to='schools.school')),
            ],
            options={
                'verbose_name': 'Security Review',
                'verbose_name_plural': 'Security Reviews',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='UpdateConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_update_enabled', models.BooleanField(default=False)),
                ('update_channel', models.CharField(choices=[('stable', 'Stable'), ('beta', 'Beta'), ('alpha', 'Alpha')], default='stable', max_length=20)),
                ('last_update_check', models.DateTimeField(blank=True, null=True)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('current_version', models.CharField(blank=True, max_length=50)),
                ('maintenance_window', models.CharField(blank=True, max_length=100)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='update_config', to='schools.school')),
            ],
            options={
                'verbose_name': 'Update Configuration',
                'verbose_name_plural': 'Update Configurations',
            },
        ),
        migrations.CreateModel(
            name='ActivityMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('resource', models.CharField(blank=True, max_length=100)),
                ('resource_id', models.CharField(blank=True, max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='schools.school')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['school', 'timestamp'], name='premium_act_school__46b33d_idx'), models.Index(fields=['user', 'timestamp'], name='premium_act_user_id_e0daa1_idx'), models.Index(fields=['action', 'timestamp'], name='premium_act_action_054913_idx')],
            },
        ),
        migrations.CreateModel(
            name='UsageAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=100)),
                ('action', models.CharField(max_length=100)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='schools.school')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Usage Analytics',
                'verbose_name_plural': 'Usage Analytics',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['school', 'timestamp'], name='premium_usa_school__f3bc5b_idx'), models.Index(fields=['feature', 'timestamp'], name='premium_usa_feature_1766f5_idx')],
            },
        ),
    ]
