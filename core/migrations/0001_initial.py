# Generated by Django 5.2.6 on 2025-09-17 17:46

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='ISO 3166-1 alpha-3 country code', max_length=3, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('currency_code', models.CharField(default='USD', help_text='ISO 4217 currency code', max_length=3)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('locale', models.CharField(default='en-US', help_text='Language and region code', max_length=10)),
                ('is_rtl', models.BooleanField(default=False, help_text='Right-to-left language support')),
                ('date_format', models.CharField(default='%Y-%m-%d', max_length=20)),
                ('time_format', models.CharField(default='%H:%M', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('supported_payment_gateways', models.JSONField(default=list, help_text='List of enabled payment gateways')),
                ('data_retention_days', models.IntegerField(default=2555, help_text='Data retention period in days (7 years default)')),
                ('gdpr_compliant', models.BooleanField(default=False)),
                ('requires_consent', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FeatureToggle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('is_global', models.BooleanField(default=False, help_text='If true, applies globally; if false, can be set per tenant')),
                ('is_enabled_globally', models.BooleanField(default=False)),
                ('requires_owner_approval', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('stripe', 'Stripe'), ('paystack', 'Paystack'), ('flutterwave', 'Flutterwave'), ('paypal', 'PayPal'), ('mpesa', 'M-Pesa'), ('ecocash', 'EcoCash'), ('onemoney', 'OneMoney'), ('razorpay', 'Razorpay')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('config', models.JSONField(default=dict, help_text='Gateway-specific configuration')),
                ('supports_recurring', models.BooleanField(default=False)),
                ('supports_webhooks', models.BooleanField(default=False)),
                ('supported_currencies', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allowed_countries', models.ManyToManyField(blank=True, to='core.country')),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('subdomain', models.SlugField(help_text='Unique subdomain identifier', unique=True)),
                ('domain', models.CharField(blank=True, help_text='Custom domain if applicable', max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='tenant_logos/')),
                ('primary_color', models.CharField(default='#007bff', help_text='Primary brand color (hex)', max_length=7)),
                ('secondary_color', models.CharField(default='#6c757d', help_text='Secondary brand color (hex)', max_length=7)),
                ('custom_css', models.TextField(blank=True, help_text='Custom CSS for tenant-specific styling')),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('subscription_tier', models.CharField(default='free', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True)),
                ('enabled_features', models.JSONField(default=list, help_text='List of enabled features for this tenant')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.country')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_tenants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('read', 'Read'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('payment', 'Payment'), ('export', 'Data Export'), ('config_change', 'Configuration Change')], max_length=20)),
                ('resource', models.CharField(help_text='Model name or resource identifier', max_length=100)),
                ('resource_id', models.CharField(blank=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='core_auditl_user_id_7b678c_idx'), models.Index(fields=['tenant', 'timestamp'], name='core_auditl_tenant__4440e3_idx'), models.Index(fields=['action', 'timestamp'], name='core_auditl_action_096de0_idx')],
            },
        ),
        migrations.CreateModel(
            name='TenantFeatureToggle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.featuretoggle')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tenant')),
            ],
            options={
                'unique_together': {('tenant', 'feature')},
            },
        ),
    ]
